<?php

require_once 'Calculator.php';

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-05-23 at 06:11:37.
 */
class CalculatorTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var Calculator
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new Calculator;
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {

	}

	/**
	 * Generated from @assert (0, 0) == 0.
	 *
	 * @covers Calculator::add
	 */
	public function testAdd() {
		$this->assertEquals(
			0
			, $this->object->add(0, 0)
		);
	}

	/**
	 * Generated from @assert (0, 1) == 1.
	 *
	 * @covers Calculator::add
	 */
	public function testAdd2() {
		$this->assertEquals(
			1
			, $this->object->add(0, 1)
		);
	}

	/**
	 * Generated from @assert (1, 2) != 4.
	 *
	 * @covers Calculator::add
	 */
	public function testAdd3() {
		$this->assertNotEquals(
			4
			, $this->object->add(1, 2)
		);
	}

	/**
	 * Generated from @assert (0, 0) == 0.
	 *
	 * @covers Calculator::multiply
	 */
	public function testMultiply() {
		$this->assertEquals(
			0
			, $this->object->multiply(0, 0)
		);
	}

	/**
	 * Generated from @assert (3, 1) == 3.
	 *
	 * @covers Calculator::multiply
	 */
	public function testMultiply2() {
		$this->assertEquals(
			3
			, $this->object->multiply(3, 1)
		);
	}

	/**
	 * Generated from @assert (4, 2) == 2.
	 *
	 * @covers Calculator::divide
	 */
	public function testDivide() {
		$this->assertEquals(
			2
			, $this->object->divide(4, 2)
		);
	}

	/**
	 * Generated from @assert (1, 0) throws Exception.
	 *
	 * @covers Calculator::divide
	 * @expectedException Exception


	 */
	public function testDivide2() {
		$this->object->divide(1, 0);
	}

	/**
	 * Generated from @assert (1, 0) == 1.
	 *
	 * @covers Calculator::subtract
	 */
	public function testSubtract() {
		$this->assertEquals(
			1
			, $this->object->subtract(1, 0)
		);
	}

	/**
	 * Generated from @assert (0, 1) == -1.
	 *
	 * @covers Calculator::subtract
	 */
	public function testSubtract2() {
		$this->assertEquals(
			-1
			, $this->object->subtract(0, 1)
		);
	}

}
